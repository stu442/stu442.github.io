"use strict";(self.webpackChunkgjg_blog=self.webpackChunkgjg_blog||[]).push([[194],{1875:function(e,n,t){t.r(n),t.d(n,{Head:function(){return i.p},default:function(){return u}});var a=t(6540),l=t(8453);const r={normal:{width:"100%",height:"352px"},compact:{width:"100%",height:"152px"}};var o=function(e){let{albumUri:n="6Ar5HxNWXtvraqs7FI7bYq",size:t="normal"}=e;return a.createElement("iframe",{title:"Spotify",style:{borderRadius:"12px"},src:`https://open.spotify.com/embed/album/${n}?theme=0`,width:r[t].width,height:r[t].height,frameBorder:"0",allowfullscreen:"",allow:"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture",loading:"lazy"})};function s(e){const n=Object.assign({p:"p",pre:"pre",code:"code"},(0,l.RP)(),e.components);return a.createElement(a.Fragment,null,a.createElement(n.p,null,"Here will a React component go:"),"\n",a.createElement(o),"\n",a.createElement(n.p,null,"Here will a normal code block go:"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},"(function() {\n\nvar cache = {};\nvar form = $('form');\nvar minified = true;\n\nvar dependencies = {};\n\nvar treeURL = 'https://api.github.com/repos/PrismJS/prism/git/trees/gh-pages?recursive=1';\nvar treePromise = new Promise(function(resolve) {\n  $u.xhr({\n    url: treeURL,\n    callback: function(xhr) {\n      if (xhr.status < 400) {\n        resolve(JSON.parse(xhr.responseText).tree);\n      }\n    }\n  });\n});\n")),"\n",a.createElement(n.p,null,"A code block with a JSDoc comment, short, and long comment:"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},"/**\n * Get value out of string (e.g. rem => px)\n * If value is px strip the px part\n * If the input is already a number only return that value\n * @param {string | number} input\n * @param {number} [rootFontSize]\n * @return {number} Number without last three characters\n * @example removeLastThree('6rem') => 6\n */\nconst getValue = (input, rootFontSize = 16) => {\n  if (typeof input === `number`) {\n    return input / rootFontSize\n  }\n\n  const isPxValue = input.slice(-2) === `px`\n\n  if (isPxValue) {\n    return parseFloat(input.slice(0, -2))\n  }\n\n  return parseFloat(input.slice(0, -3))\n}\n\n// This is a little helper function\nconst helper = (a, b) => a + b\n\n// This is also a little helper function but this time with a really long one-line comment that should show some more details\nconst morehelper = (a, b) => a * b\n\nexport { getValue, helper, morehelper }\n")),"\n",a.createElement(n.p,null,"Normal block without language:"),"\n",a.createElement(n.pre,null,a.createElement(n.code,null,'import Test from "../components/test"\n\nconst Layout = ({ children }) => (\n  <Test>\n    {children}\n  </Test>\n)\n\nexport default Layout\n')),"\n",a.createElement(n.p,null,"Code block with code highlighting:"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-jsx",title:"src/components/post.jsx",highlight:"5-7,10"},'import * as React from "react"\n\nconst Post = ({ data: { post } }) => (\n  <Layout>\n    <Heading variant="h2" as="h2">\n      {post.title}\n    </Heading>\n    <p\n      sx={{\n        color: `secondary`,\n        mt: 3,\n        a: { color: `secondary` },\n        fontSize: [1, 1, 2],\n      }}\n    >\n      <span>{post.date}</span>\n      {post.tags && (\n        <React.Fragment>\n          {` â€” `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n    <section\n      sx={{\n        ...CodeStyles,\n        my: 5,\n        ".gatsby-resp-image-wrapper": { my: 5, boxShadow: `lg` },\n      }}\n    >\n      <MDXRenderer>{post.body}</MDXRenderer>\n    </section>\n  </Layout>\n)\n\nexport default Post\n')),"\n",a.createElement(n.p,null,"Code block without title:"),"\n",a.createElement(n.pre,null,a.createElement(n.code,null,"Harry Potter and the Philosopher's Stone\n")),"\n",a.createElement(n.p,null,"Code block with lineNumbers (and lang):"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-text",withLineNumbers:!0},"Harry Potter and the Chamber of Secrets\n")),"\n",a.createElement(n.p,null,"Code block with lineNumbers (and without lang):"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-none",withLineNumbers:!0},"Harry Potter and the Chamber of Secrets\n")),"\n",a.createElement(n.p,null,"Code block with only the title:"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-none",title:"src/utils/scream.js"},"const scream = (input) => window.alert(input)\n")),"\n",a.createElement(n.p,null,"Code block with only the title and with lineNumbers:"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-none",title:"src/utils/scream.js",withLineNumbers:!0},"const scream = (input) => window.alert(input)\n")),"\n",a.createElement(n.p,null,"Line highlighting without code title:"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js",highlight:"2,4-5"},'const test = 3\nconst foo = "bar"\nconst harry = "potter"\nconst hermione = "granger"\nconst ron = "weasley"\n')),"\n",a.createElement(n.p,null,"Here will ",a.createElement(n.code,null,"inline code")," go, just inside the text. Wow!"),"\n",a.createElement(n.p,null,"Code block with line numbers, highlighting, language, and title:"),"\n",a.createElement("div",{"data-testid":"code-block"},a.createElement(n.pre,null,a.createElement(n.code,{className:"language-tsx",title:"src/components/blog.tsx",highlight:"7-8,19,21",withLineNumbers:!0},'import * as React from "react"\n\nconst Blog = ({ posts }: PostsProps) => {\n  const { tagsPath, basePath } = useSiteMetadata()\n\n  return (\n    <Layout>\n      <Flex sx={{ alignItems: `center`, justifyContent: `space-between` }}>\n        <Heading variant="h2" as="h2">\n          Blog\n        </Heading>\n        <Styled.a as={Link} sx={{ variant: `links.secondary` }} to={`/${basePath}/${tagsPath}`.replace(/\\/\\/+/g, `/`)}>\n          View all tags\n        </Styled.a>\n      </Flex>\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\n    </Layout>\n  )\n}\n\nexport default Blog\n'))))}var c=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,l.RP)(),e.components);return n?a.createElement(n,e,a.createElement(s,e)):s(e)},i=t(2141);function u(e){return a.createElement(i.A,e,a.createElement(c,e))}i.A}}]);
//# sourceMappingURL=component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-code-block-examples-index-mdx-8328496a4f49da89cf48.js.map