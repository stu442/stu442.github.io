{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-code-block-examples-index-mdx-8328496a4f49da89cf48.js","mappings":"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","sources":["webpack://gjg-blog/./content/posts/code-block-examples/SpotifyPlayer.js","webpack://gjg-blog/./content/posts/code-block-examples/index.mdx","webpack://gjg-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["import * as React from \"react\"\n\n// Size presets, defined by Spotify\nconst sizePresets = {\n  normal: {\n    width: `100%`,\n    height: `352px`,\n  },\n  compact: {\n    width: `100%`,\n    height: `152px`,\n  },\n}\n\nfunction SpotifyPlayer({ albumUri = `6Ar5HxNWXtvraqs7FI7bYq`, size = `normal` }) {\n  return (\n    <iframe\n      title=\"Spotify\"\n      style={{\n        borderRadius: `12px`,\n      }}\n      src={`https://open.spotify.com/embed/album/${albumUri}?theme=0`}\n      width={sizePresets[size].width}\n      height={sizePresets[size].height}\n      frameBorder=\"0\"\n      allowfullscreen=\"\"\n      allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"\n      loading=\"lazy\"\n    />\n  )\n}\n\nexport default SpotifyPlayer\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport SpotifyPlayer from \"./SpotifyPlayer\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Here will a React component go:\"), \"\\n\", React.createElement(SpotifyPlayer), \"\\n\", React.createElement(_components.p, null, \"Here will a normal code block go:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"(function() {\\n\\nvar cache = {};\\nvar form = $('form');\\nvar minified = true;\\n\\nvar dependencies = {};\\n\\nvar treeURL = 'https://api.github.com/repos/PrismJS/prism/git/trees/gh-pages?recursive=1';\\nvar treePromise = new Promise(function(resolve) {\\n  $u.xhr({\\n    url: treeURL,\\n    callback: function(xhr) {\\n      if (xhr.status < 400) {\\n        resolve(JSON.parse(xhr.responseText).tree);\\n      }\\n    }\\n  });\\n});\\n\")), \"\\n\", React.createElement(_components.p, null, \"A code block with a JSDoc comment, short, and long comment:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"/**\\n * Get value out of string (e.g. rem => px)\\n * If value is px strip the px part\\n * If the input is already a number only return that value\\n * @param {string | number} input\\n * @param {number} [rootFontSize]\\n * @return {number} Number without last three characters\\n * @example removeLastThree('6rem') => 6\\n */\\nconst getValue = (input, rootFontSize = 16) => {\\n  if (typeof input === `number`) {\\n    return input / rootFontSize\\n  }\\n\\n  const isPxValue = input.slice(-2) === `px`\\n\\n  if (isPxValue) {\\n    return parseFloat(input.slice(0, -2))\\n  }\\n\\n  return parseFloat(input.slice(0, -3))\\n}\\n\\n// This is a little helper function\\nconst helper = (a, b) => a + b\\n\\n// This is also a little helper function but this time with a really long one-line comment that should show some more details\\nconst morehelper = (a, b) => a * b\\n\\nexport { getValue, helper, morehelper }\\n\")), \"\\n\", React.createElement(_components.p, null, \"Normal block without language:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"import Test from \\\"../components/test\\\"\\n\\nconst Layout = ({ children }) => (\\n  <Test>\\n    {children}\\n  </Test>\\n)\\n\\nexport default Layout\\n\")), \"\\n\", React.createElement(_components.p, null, \"Code block with code highlighting:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-jsx\",\n    title: \"src/components/post.jsx\",\n    highlight: \"5-7,10\"\n  }, \"import * as React from \\\"react\\\"\\n\\nconst Post = ({ data: { post } }) => (\\n  <Layout>\\n    <Heading variant=\\\"h2\\\" as=\\\"h2\\\">\\n      {post.title}\\n    </Heading>\\n    <p\\n      sx={{\\n        color: `secondary`,\\n        mt: 3,\\n        a: { color: `secondary` },\\n        fontSize: [1, 1, 2],\\n      }}\\n    >\\n      <span>{post.date}</span>\\n      {post.tags && (\\n        <React.Fragment>\\n          {` â€” `}\\n          <ItemTags tags={post.tags} />\\n        </React.Fragment>\\n      )}\\n    </p>\\n    <section\\n      sx={{\\n        ...CodeStyles,\\n        my: 5,\\n        \\\".gatsby-resp-image-wrapper\\\": { my: 5, boxShadow: `lg` },\\n      }}\\n    >\\n      <MDXRenderer>{post.body}</MDXRenderer>\\n    </section>\\n  </Layout>\\n)\\n\\nexport default Post\\n\")), \"\\n\", React.createElement(_components.p, null, \"Code block without title:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"Harry Potter and the Philosopher's Stone\\n\")), \"\\n\", React.createElement(_components.p, null, \"Code block with lineNumbers (and lang):\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-text\",\n    withLineNumbers: true\n  }, \"Harry Potter and the Chamber of Secrets\\n\")), \"\\n\", React.createElement(_components.p, null, \"Code block with lineNumbers (and without lang):\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-none\",\n    withLineNumbers: true\n  }, \"Harry Potter and the Chamber of Secrets\\n\")), \"\\n\", React.createElement(_components.p, null, \"Code block with only the title:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-none\",\n    title: \"src/utils/scream.js\"\n  }, \"const scream = (input) => window.alert(input)\\n\")), \"\\n\", React.createElement(_components.p, null, \"Code block with only the title and with lineNumbers:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-none\",\n    title: \"src/utils/scream.js\",\n    withLineNumbers: true\n  }, \"const scream = (input) => window.alert(input)\\n\")), \"\\n\", React.createElement(_components.p, null, \"Line highlighting without code title:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\",\n    highlight: \"2,4-5\"\n  }, \"const test = 3\\nconst foo = \\\"bar\\\"\\nconst harry = \\\"potter\\\"\\nconst hermione = \\\"granger\\\"\\nconst ron = \\\"weasley\\\"\\n\")), \"\\n\", React.createElement(_components.p, null, \"Here will \", React.createElement(_components.code, null, \"inline code\"), \" go, just inside the text. Wow!\"), \"\\n\", React.createElement(_components.p, null, \"Code block with line numbers, highlighting, language, and title:\"), \"\\n\", React.createElement(\"div\", {\n    \"data-testid\": \"code-block\"\n  }, React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-tsx\",\n    title: \"src/components/blog.tsx\",\n    highlight: \"7-8,19,21\",\n    withLineNumbers: true\n  }, \"import * as React from \\\"react\\\"\\n\\nconst Blog = ({ posts }: PostsProps) => {\\n  const { tagsPath, basePath } = useSiteMetadata()\\n\\n  return (\\n    <Layout>\\n      <Flex sx={{ alignItems: `center`, justifyContent: `space-between` }}>\\n        <Heading variant=\\\"h2\\\" as=\\\"h2\\\">\\n          Blog\\n        </Heading>\\n        <Styled.a as={Link} sx={{ variant: `links.secondary` }} to={`/${basePath}/${tagsPath}`.replace(/\\\\/\\\\/+/g, `/`)}>\\n          View all tags\\n        </Styled.a>\\n      </Flex>\\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\\n    </Layout>\\n  )\\n}\\n\\nexport default Blog\\n\"))));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/parkminsoo/Desktop/blog/content/posts/code-block-examples/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["sizePresets","normal","width","height","compact","_ref","albumUri","size","React","title","style","borderRadius","src","frameBorder","allowfullscreen","allow","loading","_createMdxContent","props","_components","Object","assign","p","pre","code","_provideComponents","components","SpotifyPlayer","className","highlight","withLineNumbers","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}