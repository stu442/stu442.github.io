"use strict";(self.webpackChunkgjg_blog=self.webpackChunkgjg_blog||[]).push([[74],{6116:function(e,n,t){t.r(n),t.d(n,{Head:function(){return c.p},default:function(){return m}});var l=t(6540),r=t(8453);function a(e){const n=Object.assign({h2:"h2",img:"img",p:"p",a:"a",h3:"h3",blockquote:"blockquote",code:"code",h4:"h4",pre:"pre",em:"em"},(0,r.RP)(),e.components);return l.createElement(l.Fragment,null,l.createElement(n.h2,null,"🐸 미리보기"),"\n",l.createElement(n.img,{src:"/static/images//cbb9b96f429d491547f49a961ee1aeae/pepegif.gif",alt:"결과물"}),"\n",l.createElement(n.h2,null,"🧑‍💻 깃허브 링크"),"\n",l.createElement(n.p,null,l.createElement(n.a,{href:"https://github.com/stu442/codingapple_cardCSS"},"Github 실습 링크")),"\n",l.createElement(n.h2,null,"CSS 속성 알아보기"),"\n",l.createElement(n.h3,null,"transform :  perspective(), rotateY(), rotateX()"),"\n",l.createElement(n.blockquote,null,"\n",l.createElement(n.p,null,"CSS ",l.createElement(n.code,null,"transform")," 속성으로 요소에 회전, 크기 조절, 기울이기, 이동 효과를 부여할 수 있습니다. ",l.createElement(n.code,null,"transform"),"은 CSS 시각적 서식 모델의 좌표 공간을 변경합니다."),"\n"),"\n",l.createElement(n.p,null,l.createElement(n.a,{href:"https://developer.mozilla.org/ko/docs/Web/CSS/transform"},"출처 : mdn transform 문서")),"\n",l.createElement(n.h4,null,"perspective()"),"\n",l.createElement(n.blockquote,null,"\n",l.createElement(n.p,null,"The perspective CSS property determines the distance between the z=0 plane and the user in order to give a 3D-positioned element some perspective."),"\n",l.createElement(n.p,null,l.createElement(n.code,null,"perspective")," 속성은 배치된 요소에 원근감을 z=0 평면과 사용자 사이의 거리를 결정합니다."),"\n"),"\n",l.createElement(n.p,null,l.createElement(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/perspective"},"출처 : mdn perspective 문서")),"\n",l.createElement(n.p,null,"즉 perspective()는 요소에 원근감을 주는 속성입니다.\n평면과 사용자 사이의 거리를 만들어 원근감을 표현합니다."),"\n",l.createElement(n.p,null,'위 예시에서는 "perspective(1000px)"을 사용해서 1000px 떨어져 보이게 했습니다.'),"\n",l.createElement(n.h4,null,"rotateY(), rotateX()"),"\n",l.createElement(n.blockquote,null,"\n",l.createElement(n.p,null,"The rotateX() CSS function defines a transformation that rotates an element around the x-axis (horizontal) without deforming it. Its result is a transform-function data type."),"\n",l.createElement(n.p,null,"rotateX() 함수는 요소를 변형하지 않고, X축(가로)를 중심으로 회전하는 변형을 정의합니다. 그 결과는 transform-function 데이터 유형입니다."),"\n"),"\n",l.createElement(n.p,null,l.createElement(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/rotateX"},"출처 : mdn rotateX 문서")),"\n",l.createElement(n.p,null,"X의 경우는 X축을 접는다는 느낌(수직 방향)으로 접히게 됩니다."),"\n",l.createElement(n.p,null,"반대로 Y의 경우는 Y축을 접는다는 느낌(수평 방향)으로 접히게 됩니다."),"\n",l.createElement(n.p,null,"출처를 눌러 시각적으로 확인하면 좋습니다."),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-javascript"},"  container.addEventListener('mousemove', (e) => {\n    let x = e.offsetX;\n    let y = e.offsetY;\n    let rotateY = 0.05 * x - 20;\n    let rotateX = 0.05 * y - 20;\n\n\toverlay.style = `background-position : ${x/3 + y/3}%`\n\n\tcontainer.style = `transform : perspective(1000px) rotateY(${rotateY}deg) rotateX(${rotateX}deg)`;\n})\n")),"\n",l.createElement(n.p,null,"위 예시에서는, 마우스를 올렸을때 사진을 돌아가게 하는 용도로 사용했습니다.\n마우스의 x, y 좌표를 계산하여 최대 20도, 최소 -20도까지 돌아갑니다."),"\n",l.createElement(n.h3,null,"mix-blend-mode"),"\n",l.createElement(n.p,null,"해당 속성은, 포토샵을 해본 사람이라면 알만한 multiply, screen 등과 같이 ",l.createElement(n.em,null,"블렌더 효과"),"를 입힙니다."),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-css"},"mix-blend-mode: normal;\nmix-blend-mode: multiply;\nmix-blend-mode: screen;\nmix-blend-mode: overlay;\nmix-blend-mode: darken;\nmix-blend-mode: lighten;\nmix-blend-mode: color-dodge;\nmix-blend-mode: color-burn;\nmix-blend-mode: hard-light;\nmix-blend-mode: soft-light;\nmix-blend-mode: difference;\nmix-blend-mode: exclusion;\nmix-blend-mode: hue;\nmix-blend-mode: saturation;\nmix-blend-mode: color;\nmix-blend-mode: luminosity;\n")),"\n",l.createElement(n.h3,null,"filter"),"\n",l.createElement(n.blockquote,null,"\n",l.createElement(n.p,null,"The filter CSS property applies graphical effects like blur or color shift to an element. Filters are commonly used to adjust the rendering of images, backgrounds, and borders."),"\n",l.createElement(n.p,null,"Several functions, such as blur() and contrast(), are available to help you achieve predefined effects."),"\n",l.createElement(n.p,null,"filter 속성은 요소에 흐림 또는 색상 이동과 같은 그래픽 효과를 적용합니다. filter는 일반적으로 이미지, 배경 및 테두리의 렌더링을 조정하는 데 사용됩니다."),"\n",l.createElement(n.p,null,"blur() 와 contrast()와 같은 여러 함수를 사용하여 미리 정의된 효과를 얻을 수 있습니다."),"\n"),"\n",l.createElement(n.p,null,l.createElement(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/filter"},"mdn filter 공식 문서")),"\n",l.createElement(n.p,null,"위 예시에서는 overlay의 밝기와 투명도를 조정하는 데 사용했습니다."),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-css"},"filter: brightness(1.0) opacity(0.9);\n")),"\n",l.createElement(n.h3,null,"background-position"),"\n",l.createElement(n.blockquote,null,"\n",l.createElement(n.p,null,"The background-position CSS property sets the initial position for each background image. The position is relative to the position layer set by background-origin."),"\n",l.createElement(n.p,null,"background-position 속성은 각 배경 이미지의 초기 위치를 설정합니다. 위치는 background-origin 설정된 위치 레이어에 상대적입니다."),"\n"),"\n",l.createElement(n.p,null,l.createElement(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/background-position"},"mdn background-position 공식 문서")),"\n",l.createElement(n.p,null,"background 위치를 정하는 속성입니다."),"\n",l.createElement(n.p,null,"위 예시에서는 overlay를 이동시키기 위해 사용했습니다."),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-javascript"},"overlay.style = `background-position : ${x/3 + y/3}%`\n")),"\n",l.createElement(n.h3,null,"background-size"),"\n",l.createElement(n.blockquote,null,"\n",l.createElement(n.p,null,"The background-size CSS property sets the size of the element's background image. The image can be left to its natural size, stretched, or constrained to fit the available space."),"\n",l.createElement(n.p,null,"background-size 속성은 요소의 배경 이미지 크기를 설정합니다. 이미지는 자연스러운 크기로 두거나, 늘리거나, 사용 가능한 공간에 맞게 제한할 수 있습니다."),"\n"),"\n",l.createElement(n.p,null,l.createElement(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/background-size"},"mdn background-size 공식 문서")),"\n",l.createElement(n.p,null,"배경 사이즈를 결정하는 속성입니다."),"\n",l.createElement(n.p,null,"위 예시에서는 cover 를 통해 card 사이즈를 박스 크기에 맞추거나, overlay 크기를 1.5배 키우는 용도로 사용했습니다."),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-css"},"background-size: cover;\n\nbackground-size: 150% 150%;\n")),"\n",l.createElement(n.p,null,"주의해야할 부분은 contain과 cover 입니다."),"\n",l.createElement(n.p,null,"cover는 비율을 맞추나, 비율이 다르면 ",l.createElement(n.em,null,"잘립니다"),". 하지만 contain은 이미지를 완벽하게 맞추나, ",l.createElement(n.em,null,"공백"),"이 생길 수 있습니다."),"\n",l.createElement(n.p,null,"상황에 따라 알맞게 사용합니다."),"\n",l.createElement(n.h2,null,"📌 참고자료"),"\n",l.createElement(n.p,null,l.createElement(n.a,{href:"https://www.youtube.com/watch?v=YDCCauu4lIk&t=319s"},"유튜브, 코딩애플")))}var o=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.RP)(),e.components);return n?l.createElement(n,e,l.createElement(a,e)):a(e)},c=t(2141);function m(e){return l.createElement(c.A,e,l.createElement(o,e))}c.A}}]);
//# sourceMappingURL=component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-coding-apple-index-mdx-9cb373cdbb9e0e7509ed.js.map