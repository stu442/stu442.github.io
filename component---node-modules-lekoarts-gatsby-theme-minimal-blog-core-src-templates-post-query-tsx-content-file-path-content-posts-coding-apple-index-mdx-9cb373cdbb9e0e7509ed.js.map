{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-coding-apple-index-mdx-9cb373cdbb9e0e7509ed.js","mappings":"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","sources":["webpack://gjg-blog/./content/posts/codingApple/index.mdx","webpack://gjg-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    img: \"img\",\n    p: \"p\",\n    a: \"a\",\n    h3: \"h3\",\n    blockquote: \"blockquote\",\n    code: \"code\",\n    h4: \"h4\",\n    pre: \"pre\",\n    em: \"em\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"🐸 미리보기\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/static/images//cbb9b96f429d491547f49a961ee1aeae/pepegif.gif\",\n    alt: \"결과물\"\n  }), \"\\n\", React.createElement(_components.h2, null, \"🧑‍💻 깃허브 링크\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/stu442/codingapple_cardCSS\"\n  }, \"Github 실습 링크\")), \"\\n\", React.createElement(_components.h2, null, \"CSS 속성 알아보기\"), \"\\n\", React.createElement(_components.h3, null, \"transform :  perspective(), rotateY(), rotateX()\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"CSS \", React.createElement(_components.code, null, \"transform\"), \" 속성으로 요소에 회전, 크기 조절, 기울이기, 이동 효과를 부여할 수 있습니다. \", React.createElement(_components.code, null, \"transform\"), \"은 CSS 시각적 서식 모델의 좌표 공간을 변경합니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://developer.mozilla.org/ko/docs/Web/CSS/transform\"\n  }, \"출처 : mdn transform 문서\")), \"\\n\", React.createElement(_components.h4, null, \"perspective()\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"The perspective CSS property determines the distance between the z=0 plane and the user in order to give a 3D-positioned element some perspective.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"perspective\"), \" 속성은 배치된 요소에 원근감을 z=0 평면과 사용자 사이의 거리를 결정합니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://developer.mozilla.org/en-US/docs/Web/CSS/perspective\"\n  }, \"출처 : mdn perspective 문서\")), \"\\n\", React.createElement(_components.p, null, \"즉 perspective()는 요소에 원근감을 주는 속성입니다.\\n평면과 사용자 사이의 거리를 만들어 원근감을 표현합니다.\"), \"\\n\", React.createElement(_components.p, null, \"위 예시에서는 \\\"perspective(1000px)\\\"을 사용해서 1000px 떨어져 보이게 했습니다.\"), \"\\n\", React.createElement(_components.h4, null, \"rotateY(), rotateX()\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"The rotateX() CSS function defines a transformation that rotates an element around the x-axis (horizontal) without deforming it. Its result is a transform-function data type.\"), \"\\n\", React.createElement(_components.p, null, \"rotateX() 함수는 요소를 변형하지 않고, X축(가로)를 중심으로 회전하는 변형을 정의합니다. 그 결과는 transform-function 데이터 유형입니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/rotateX\"\n  }, \"출처 : mdn rotateX 문서\")), \"\\n\", React.createElement(_components.p, null, \"X의 경우는 X축을 접는다는 느낌(수직 방향)으로 접히게 됩니다.\"), \"\\n\", React.createElement(_components.p, null, \"반대로 Y의 경우는 Y축을 접는다는 느낌(수평 방향)으로 접히게 됩니다.\"), \"\\n\", React.createElement(_components.p, null, \"출처를 눌러 시각적으로 확인하면 좋습니다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"  container.addEventListener('mousemove', (e) => {\\n    let x = e.offsetX;\\n    let y = e.offsetY;\\n    let rotateY = 0.05 * x - 20;\\n    let rotateX = 0.05 * y - 20;\\n\\n\\toverlay.style = `background-position : ${x/3 + y/3}%`\\n\\n\\tcontainer.style = `transform : perspective(1000px) rotateY(${rotateY}deg) rotateX(${rotateX}deg)`;\\n})\\n\")), \"\\n\", React.createElement(_components.p, null, \"위 예시에서는, 마우스를 올렸을때 사진을 돌아가게 하는 용도로 사용했습니다.\\n마우스의 x, y 좌표를 계산하여 최대 20도, 최소 -20도까지 돌아갑니다.\"), \"\\n\", React.createElement(_components.h3, null, \"mix-blend-mode\"), \"\\n\", React.createElement(_components.p, null, \"해당 속성은, 포토샵을 해본 사람이라면 알만한 multiply, screen 등과 같이 \", React.createElement(_components.em, null, \"블렌더 효과\"), \"를 입힙니다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-css\"\n  }, \"mix-blend-mode: normal;\\nmix-blend-mode: multiply;\\nmix-blend-mode: screen;\\nmix-blend-mode: overlay;\\nmix-blend-mode: darken;\\nmix-blend-mode: lighten;\\nmix-blend-mode: color-dodge;\\nmix-blend-mode: color-burn;\\nmix-blend-mode: hard-light;\\nmix-blend-mode: soft-light;\\nmix-blend-mode: difference;\\nmix-blend-mode: exclusion;\\nmix-blend-mode: hue;\\nmix-blend-mode: saturation;\\nmix-blend-mode: color;\\nmix-blend-mode: luminosity;\\n\")), \"\\n\", React.createElement(_components.h3, null, \"filter\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"The filter CSS property applies graphical effects like blur or color shift to an element. Filters are commonly used to adjust the rendering of images, backgrounds, and borders.\"), \"\\n\", React.createElement(_components.p, null, \"Several functions, such as blur() and contrast(), are available to help you achieve predefined effects.\"), \"\\n\", React.createElement(_components.p, null, \"filter 속성은 요소에 흐림 또는 색상 이동과 같은 그래픽 효과를 적용합니다. filter는 일반적으로 이미지, 배경 및 테두리의 렌더링을 조정하는 데 사용됩니다.\"), \"\\n\", React.createElement(_components.p, null, \"blur() 와 contrast()와 같은 여러 함수를 사용하여 미리 정의된 효과를 얻을 수 있습니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://developer.mozilla.org/en-US/docs/Web/CSS/filter\"\n  }, \"mdn filter 공식 문서\")), \"\\n\", React.createElement(_components.p, null, \"위 예시에서는 overlay의 밝기와 투명도를 조정하는 데 사용했습니다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-css\"\n  }, \"filter: brightness(1.0) opacity(0.9);\\n\")), \"\\n\", React.createElement(_components.h3, null, \"background-position\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"The background-position CSS property sets the initial position for each background image. The position is relative to the position layer set by background-origin.\"), \"\\n\", React.createElement(_components.p, null, \"background-position 속성은 각 배경 이미지의 초기 위치를 설정합니다. 위치는 background-origin 설정된 위치 레이어에 상대적입니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://developer.mozilla.org/en-US/docs/Web/CSS/background-position\"\n  }, \"mdn background-position 공식 문서\")), \"\\n\", React.createElement(_components.p, null, \"background 위치를 정하는 속성입니다.\"), \"\\n\", React.createElement(_components.p, null, \"위 예시에서는 overlay를 이동시키기 위해 사용했습니다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"overlay.style = `background-position : ${x/3 + y/3}%`\\n\")), \"\\n\", React.createElement(_components.h3, null, \"background-size\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"The background-size CSS property sets the size of the element's background image. The image can be left to its natural size, stretched, or constrained to fit the available space.\"), \"\\n\", React.createElement(_components.p, null, \"background-size 속성은 요소의 배경 이미지 크기를 설정합니다. 이미지는 자연스러운 크기로 두거나, 늘리거나, 사용 가능한 공간에 맞게 제한할 수 있습니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://developer.mozilla.org/en-US/docs/Web/CSS/background-size\"\n  }, \"mdn background-size 공식 문서\")), \"\\n\", React.createElement(_components.p, null, \"배경 사이즈를 결정하는 속성입니다.\"), \"\\n\", React.createElement(_components.p, null, \"위 예시에서는 cover 를 통해 card 사이즈를 박스 크기에 맞추거나, overlay 크기를 1.5배 키우는 용도로 사용했습니다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-css\"\n  }, \"background-size: cover;\\n\\nbackground-size: 150% 150%;\\n\")), \"\\n\", React.createElement(_components.p, null, \"주의해야할 부분은 contain과 cover 입니다.\"), \"\\n\", React.createElement(_components.p, null, \"cover는 비율을 맞추나, 비율이 다르면 \", React.createElement(_components.em, null, \"잘립니다\"), \". 하지만 contain은 이미지를 완벽하게 맞추나, \", React.createElement(_components.em, null, \"공백\"), \"이 생길 수 있습니다.\"), \"\\n\", React.createElement(_components.p, null, \"상황에 따라 알맞게 사용합니다.\"), \"\\n\", React.createElement(_components.h2, null, \"📌 참고자료\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://www.youtube.com/watch?v=YDCCauu4lIk&t=319s\"\n  }, \"유튜브, 코딩애플\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/parkminsoo/Desktop/blog/content/posts/codingApple/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","img","p","a","h3","blockquote","code","h4","pre","em","_provideComponents","components","React","src","alt","href","className","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}