{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-code-block-examples-index-mdx-6a89b63c7be030225481.js","mappings":"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","sources":["webpack://gjg-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/post-footer.tsx","webpack://gjg-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://gjg-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://gjg-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://gjg-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://gjg-blog/./content/posts/code-block-examples/SpotifyPlayer.js","webpack://gjg-blog/./content/posts/code-block-examples/index.mdx","webpack://gjg-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => {\n    const giscusRef = React.useRef<HTMLDivElement>(null)\n\n    React.useEffect(() => {\n        const changeGiscusTheme = (theme: string) => {\n            const iframe = document.querySelector<HTMLIFrameElement>(\"iframe.giscus-frame\");\n            iframe?.contentWindow?.postMessage(\n                {\n                    giscus: {\n                        setConfig: {\n                            theme: theme && theme === 'dark' ? 'dark_high_contrast' : 'light_high_contrast'\n                        },\n                    },\n                },\n                \"https://giscus.app\"\n            );\n        }\n\n        const handleStorageChange = (event: StorageEvent) => {\n            if(event.key) {\n                changeGiscusTheme(event.key)\n            }\n        };\n        window.addEventListener(\"storage\", handleStorageChange);\n        return () => {\n            window.removeEventListener(\"storage\", handleStorageChange);\n        }\n    }, []);\n\n    React.useEffect(() => {\n        const script = document.createElement(\"script\");\n        const getColorMode = () => {\n            const storageColor = localStorage.getItem(\"theme-ui-color-mode\");\n            if (storageColor) {\n                return storageColor === 'dark' ? 'dark_high_contrast' : 'light_high_contrast';\n            }\n            const prefersDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n            return prefersDark ? 'dark_high_contrast' : 'light_high_contrast';\n        }\n        script.src = \"https://giscus.app/client.js\";\n        script.setAttribute(\"data-repo\", \"stu442/comment_for_blog\");\n        script.setAttribute(\"data-repo-id\", \"R_kgDOL7wVWw\");\n        script.setAttribute(\"data-category\", \"Comments\");\n        script.setAttribute(\"data-category-id\", \"DIC_kwDOL7wVW84CfXvt\");\n        script.setAttribute(\"data-mapping\", \"pathname\");\n        script.setAttribute(\"data-strict\", \"0\");\n        script.setAttribute(\"data-reactions-enabled\", \"1\");\n        script.setAttribute(\"data-emit-metadata\", \"0\");\n        script.setAttribute(\"data-input-position\", \"top\");\n        script.setAttribute(\"data-theme\", getColorMode());\n        script.setAttribute(\"data-lang\", \"ko\");\n        script.setAttribute(\"data-loading\", \"lazy\");\n        script.setAttribute(\"crossorigin\", \"anonymous\");\n        script.async = true;\n\n        if(giscusRef.current) {\n            giscusRef.current.appendChild(script);\n        }\n\n    }, []);\n\n    return (\n        <div id=\"giscus-box\">\n            <div ref={giscusRef} />\n        </div>\n    )\n}\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <meta name=\"google-site-verification\" content=\"dr5383bLKa7yOGgLWHaC5h2Df4Hltvu0PsNy3oGkqOI\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\n\n// Size presets, defined by Spotify\nconst sizePresets = {\n  normal: {\n    width: `100%`,\n    height: `352px`,\n  },\n  compact: {\n    width: `100%`,\n    height: `152px`,\n  },\n}\n\nfunction SpotifyPlayer({ albumUri = `6Ar5HxNWXtvraqs7FI7bYq`, size = `normal` }) {\n  return (\n    <iframe\n      title=\"Spotify\"\n      style={{\n        borderRadius: `12px`,\n      }}\n      src={`https://open.spotify.com/embed/album/${albumUri}?theme=0`}\n      width={sizePresets[size].width}\n      height={sizePresets[size].height}\n      frameBorder=\"0\"\n      allowfullscreen=\"\"\n      allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"\n      loading=\"lazy\"\n    />\n  )\n}\n\nexport default SpotifyPlayer\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport SpotifyPlayer from \"./SpotifyPlayer\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Here will a React component go:\"), \"\\n\", React.createElement(SpotifyPlayer), \"\\n\", React.createElement(_components.p, null, \"Here will a normal code block go:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"(function() {\\n\\nvar cache = {};\\nvar form = $('form');\\nvar minified = true;\\n\\nvar dependencies = {};\\n\\nvar treeURL = 'https://api.github.com/repos/PrismJS/prism/git/trees/gh-pages?recursive=1';\\nvar treePromise = new Promise(function(resolve) {\\n  $u.xhr({\\n    url: treeURL,\\n    callback: function(xhr) {\\n      if (xhr.status < 400) {\\n        resolve(JSON.parse(xhr.responseText).tree);\\n      }\\n    }\\n  });\\n});\\n\")), \"\\n\", React.createElement(_components.p, null, \"A code block with a JSDoc comment, short, and long comment:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"/**\\n * Get value out of string (e.g. rem => px)\\n * If value is px strip the px part\\n * If the input is already a number only return that value\\n * @param {string | number} input\\n * @param {number} [rootFontSize]\\n * @return {number} Number without last three characters\\n * @example removeLastThree('6rem') => 6\\n */\\nconst getValue = (input, rootFontSize = 16) => {\\n  if (typeof input === `number`) {\\n    return input / rootFontSize\\n  }\\n\\n  const isPxValue = input.slice(-2) === `px`\\n\\n  if (isPxValue) {\\n    return parseFloat(input.slice(0, -2))\\n  }\\n\\n  return parseFloat(input.slice(0, -3))\\n}\\n\\n// This is a little helper function\\nconst helper = (a, b) => a + b\\n\\n// This is also a little helper function but this time with a really long one-line comment that should show some more details\\nconst morehelper = (a, b) => a * b\\n\\nexport { getValue, helper, morehelper }\\n\")), \"\\n\", React.createElement(_components.p, null, \"Normal block without language:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"import Test from \\\"../components/test\\\"\\n\\nconst Layout = ({ children }) => (\\n  <Test>\\n    {children}\\n  </Test>\\n)\\n\\nexport default Layout\\n\")), \"\\n\", React.createElement(_components.p, null, \"Code block with code highlighting:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-jsx\",\n    title: \"src/components/post.jsx\",\n    highlight: \"5-7,10\"\n  }, \"import * as React from \\\"react\\\"\\n\\nconst Post = ({ data: { post } }) => (\\n  <Layout>\\n    <Heading variant=\\\"h2\\\" as=\\\"h2\\\">\\n      {post.title}\\n    </Heading>\\n    <p\\n      sx={{\\n        color: `secondary`,\\n        mt: 3,\\n        a: { color: `secondary` },\\n        fontSize: [1, 1, 2],\\n      }}\\n    >\\n      <span>{post.date}</span>\\n      {post.tags && (\\n        <React.Fragment>\\n          {` — `}\\n          <ItemTags tags={post.tags} />\\n        </React.Fragment>\\n      )}\\n    </p>\\n    <section\\n      sx={{\\n        ...CodeStyles,\\n        my: 5,\\n        \\\".gatsby-resp-image-wrapper\\\": { my: 5, boxShadow: `lg` },\\n      }}\\n    >\\n      <MDXRenderer>{post.body}</MDXRenderer>\\n    </section>\\n  </Layout>\\n)\\n\\nexport default Post\\n\")), \"\\n\", React.createElement(_components.p, null, \"Code block without title:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"Harry Potter and the Philosopher's Stone\\n\")), \"\\n\", React.createElement(_components.p, null, \"Code block with lineNumbers (and lang):\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-text\",\n    withLineNumbers: true\n  }, \"Harry Potter and the Chamber of Secrets\\n\")), \"\\n\", React.createElement(_components.p, null, \"Code block with lineNumbers (and without lang):\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-none\",\n    withLineNumbers: true\n  }, \"Harry Potter and the Chamber of Secrets\\n\")), \"\\n\", React.createElement(_components.p, null, \"Code block with only the title:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-none\",\n    title: \"src/utils/scream.js\"\n  }, \"const scream = (input) => window.alert(input)\\n\")), \"\\n\", React.createElement(_components.p, null, \"Code block with only the title and with lineNumbers:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-none\",\n    title: \"src/utils/scream.js\",\n    withLineNumbers: true\n  }, \"const scream = (input) => window.alert(input)\\n\")), \"\\n\", React.createElement(_components.p, null, \"Line highlighting without code title:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\",\n    highlight: \"2,4-5\"\n  }, \"const test = 3\\nconst foo = \\\"bar\\\"\\nconst harry = \\\"potter\\\"\\nconst hermione = \\\"granger\\\"\\nconst ron = \\\"weasley\\\"\\n\")), \"\\n\", React.createElement(_components.p, null, \"Here will \", React.createElement(_components.code, null, \"inline code\"), \" go, just inside the text. Wow!\"), \"\\n\", React.createElement(_components.p, null, \"Code block with line numbers, highlighting, language, and title:\"), \"\\n\", React.createElement(\"div\", {\n    \"data-testid\": \"code-block\"\n  }, React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-tsx\",\n    title: \"src/components/blog.tsx\",\n    highlight: \"7-8,19,21\",\n    withLineNumbers: true\n  }, \"import * as React from \\\"react\\\"\\n\\nconst Blog = ({ posts }: PostsProps) => {\\n  const { tagsPath, basePath } = useSiteMetadata()\\n\\n  return (\\n    <Layout>\\n      <Flex sx={{ alignItems: `center`, justifyContent: `space-between` }}>\\n        <Heading variant=\\\"h2\\\" as=\\\"h2\\\">\\n          Blog\\n        </Heading>\\n        <Styled.a as={Link} sx={{ variant: `links.secondary` }} to={`/${basePath}/${tagsPath}`.replace(/\\\\/\\\\/+/g, `/`)}>\\n          View all tags\\n        </Styled.a>\\n      </Flex>\\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\\n    </Layout>\\n  )\\n}\\n\\nexport default Blog\\n\"))));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/parkminsoo/Desktop/blog/content/posts/code-block-examples/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_ref","post","giscusRef","React","handleStorageChange","event","key","theme","_iframe$contentWindow","iframe","document","querySelector","contentWindow","postMessage","giscus","setConfig","changeGiscusTheme","window","addEventListener","removeEventListener","script","createElement","src","setAttribute","getColorMode","storageColor","localStorage","getItem","matchMedia","matches","async","current","appendChild","id","ref","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","_post$banner","_post$banner$childIma","_post$banner$childIma2","Seo","description","excerpt","image","banner","childImageSharp","resize","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","tagsPath","basePath","useMinimalBlogConfig","tag","i","Link","t","_t$styles","styles","to","replaceSlashes","name","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","content","property","rel","type","sizes","href","withPrefix","sizePresets","normal","width","height","compact","albumUri","size","style","frameBorder","allowfullscreen","allow","loading","_createMdxContent","_components","Object","assign","p","pre","code","_provideComponents","components","SpotifyPlayer","className","highlight","withLineNumbers","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}